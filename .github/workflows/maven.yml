# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

permissions:
  contents: write
  packages: read
  security-events: write

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    container: # Especifica o uso de um container docker
      image: jelastic/maven:3.9.5-openjdk-21

    steps:
      - uses: actions/checkout@v4
      - name: Build with Maven
        working-directory: bot-rag # Define o diretório de trabalho
        run: mvn clean package -DskipTests # Adicione -DskipTests para pular os testes (opcional)
      - name: Rename JAR (Não é mais necessário)
        working-directory: bot-rag
        # O shade plugin já renomeia, então não precisa mais renomear.
      - name: Criar Release no GitHub
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "Stonks ${{ github.ref_name }}"
          draft: false
          prerelease: false
          files: bot-rag/target/Stonks.jar # Ajuste o caminho para o arquivo
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}